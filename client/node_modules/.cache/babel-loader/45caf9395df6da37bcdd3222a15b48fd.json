{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collection => collection ? Object.keys(collection).map(key => collection[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collection ? collection[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collection);","map":{"version":3,"sources":["/Users/nataliepina/dev/shop/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","collection","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACE,WAFgC,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEvDG,UAAU,IACRA,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYF,UAAZ,EAAwBG,GAAxB,CAA4BC,GAAG,IAAIJ,UAAU,CAACI,GAAD,CAA7C,CAAH,GAAyD,EAHd,CAAlD;AAMP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDb,cAAc,CACZ,CAACI,iBAAD,CADY,EAEZC,WAAW,IAAKE,UAAU,GAAGA,UAAU,CAACM,kBAAD,CAAb,GAAoC,IAFlD,CADT;AAMP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACtD,CAACC,UAAD,CADsD,EAEtDE,IAAI,IAAIA,IAAI,CAACY,UAFyC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACI,UAFsC,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collection =>\n    collection ? Object.keys(collection).map(key => collection[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections => (collection ? collection[collectionUrlParam] : null)\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collection\n);"]},"metadata":{},"sourceType":"module"}